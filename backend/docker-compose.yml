version: '3.8'

services:
  # MySQL Database
  db:
    image: mysql:8.0
    container_name: wms_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-warehouse_db}
      MYSQL_USER: ${MYSQL_USER:-wms_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-wms_password}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - wms_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: wms_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - wms_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 20s
      retries: 10

  # Warehouse Management System Backend
  backend:
    build: .
    container_name: wms_backend
    restart: unless-stopped
    environment:
      - DATABASE_URL=mysql+pymysql://${MYSQL_USER:-wms_user}:${MYSQL_PASSWORD:-wms_password}@db:3306/${MYSQL_DATABASE:-warehouse_db}
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-this-in-production}
      - ALGORITHM=${ALGORITHM:-HS256}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      - ENVIRONMENT=${ENVIRONMENT:-production}
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - wms_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      timeout: 30s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: wms_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - backend
    networks:
      - wms_network

  # Celery Worker for Background Tasks
  celery_worker:
    build: .
    container_name: wms_celery_worker
    restart: unless-stopped
    command: celery -A app.celery_app worker --loglevel=info
    environment:
      - DATABASE_URL=mysql+pymysql://${MYSQL_USER:-wms_user}:${MYSQL_PASSWORD:-wms_password}@db:3306/${MYSQL_DATABASE:-warehouse_db}
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-this-in-production}
    volumes:
      - ./logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - wms_network

  # Celery Beat for Scheduled Tasks
  celery_beat:
    build: .
    container_name: wms_celery_beat
    restart: unless-stopped
    command: celery -A app.celery_app beat --loglevel=info
    environment:
      - DATABASE_URL=mysql+pymysql://${MYSQL_USER:-wms_user}:${MYSQL_PASSWORD:-wms_password}@db:3306/${MYSQL_DATABASE:-warehouse_db}
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-this-in-production}
    volumes:
      - ./logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - wms_network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  wms_network:
    driver: bridge 